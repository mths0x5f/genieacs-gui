{"version":3,"file":"static/webpack/static/development/pages/devices.js.3593b26c2430cb8208c0.hot-update.js","sources":["webpack:///./components/devices/ui/Params.js"],"sourcesContent":["// genieacs-gui/app/views/devices/_params.html.erb  counterpart\n\nimport React, { Component } from 'react'\nimport { Tree, Input, Row, Col, Divider, Icon, Typography } from 'antd'\nimport moment from 'moment'\n\nimport './Params.css'\nimport { groupParams } from '../../../lib/helpers'\n\nconst { TreeNode } = Tree\nconst { Text } = Typography\nconst { Search } = Input\n\nconst iconStyle = { color: 'rgba(0, 0, 0, 0.65)', marginRight: 10 }\n\nconst sorter = (a, b) => (a._path > b._path ? 1 : a._path < b._path ? -1 : 0)\n\nconst highlightText = (text, textToHighlight) => {\n  let s = text.search(new RegExp(textToHighlight, 'i'))\n  let e = s + textToHighlight.length\n  return (\n    <>\n      {s >= 0 ? (\n        <>\n          {text.substring(0, s)}\n          <mark style={{ backgroundColor: 'yellow' }}>\n            {text.substring(s, e)}\n          </mark>\n          {text.substring(e)}\n        </>\n      ) : (\n        text\n      )}\n    </>\n  )\n}\n\nclass Params extends Component {\n  constructor(props) {\n    super(props)\n    this.typingTimeout = 0\n    this.state = {\n      params: props.defaultParams.sort(sorter),\n    }\n  }\n\n  componentDidMount = () => this.processParams(this.state.params, true)\n\n  processParams = (params, group, searchTerm = '') => {\n    let p\n    if (group) p = groupParams(params)\n    else p = { children: params }\n    let tree = this.treeNodes(p, searchTerm)\n    this.setState({ tree })\n  }\n\n  handleSearch = e => {\n    const search = (v, s) =>\n      v._path.search(new RegExp(s, 'i')) >= 0 ||\n      (v._value && ('' + v._value).search(new RegExp(s, 'i')) >= 0)\n\n    let searchText = e.target.value\n\n    // setTimeout is used to delay search and smooth typing\n    clearTimeout(this.typingTimeout)\n\n    this.typingTimeout = setTimeout(() => {\n      let params = this.state.params.filter(v => search(v, searchText))\n      this.processParams(params, searchText === '', searchText)\n    }, 500 / searchText.length)\n  }\n\n  treeNodes = (params, searchTerm) => {\n    let nodes = params.children.map(p => {\n      if (p.children) {\n        return (\n          <TreeNode\n            title={this.renderNode(p, searchTerm)}\n            key={p._path}\n            selectable={false}\n          >\n            {this.treeNodes(p, searchTerm)}\n          </TreeNode>\n        )\n      }\n      return (\n        <TreeNode\n          title={this.renderNode(p, searchTerm)}\n          key={p._path}\n          selectable={false}\n        />\n      )\n    })\n    return nodes\n  }\n\n  renderNode = (p, searchTerm) => {\n    return (\n      <div\n        style={{\n          whiteSpace: 'normal',\n          borderBottom: '1px solid #e8e8e8',\n          padding: 5,\n        }}\n      >\n        <Row>\n          <Col span={16}>\n            <Text className=\"long-text\" title={p._path}>\n              {p._object ? (\n                <Icon type=\"bars\" style={iconStyle} />\n              ) : p._writable ? (\n                <Icon type=\"edit\" style={iconStyle} />\n              ) : (\n                <Icon type=\"info-circle\" style={iconStyle} />\n              )}\n              {highlightText(p._path, searchTerm)}\n            </Text>\n          </Col>\n          <Col span={6} push={2}>\n            <Row gutter={2}>\n              <Col span={14}>\n                <Text type=\"secondary\" title={`Last update: ${p._timestamp}`}>\n                  <Icon\n                    type=\"clock-circle\"\n                    style={{ ...iconStyle, color: 'rgba(0, 0, 0, 0.45)' }}\n                  />\n                  {moment(p._timestamp).fromNow()}\n                </Text>\n              </Col>\n              <Col span={10} pull={2}>\n                <a onClick={() => this.handleRefresh(p._path)}>Refresh</a>\n                {p._object\n                  ? p._writable &&\n                    (p._path.match(/\\.[\\d]+$/) ? (\n                      <>\n                        <Divider type=\"vertical\" />\n                        <a>Delete</a>\n                      </>\n                    ) : (\n                      <>\n                        <Divider type=\"vertical\" />\n                        <a>Add</a>\n                      </>\n                    ))\n                  : p._writable && (\n                      <>\n                        <Divider type=\"vertical\" />\n                        <a>Edit</a>\n                      </>\n                    )}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          {!p._object && (\n            <Col span={16}>\n              <Text\n                className=\"long-text\"\n                type=\"secondary\"\n                style={{ padding: '0 24px', color: '#002f2f' }}\n              >\n                {p._value ? (\n                  highlightText('' + p._value, searchTerm)\n                ) : (\n                  <Text disabled>blank</Text>\n                )}\n              </Text>\n            </Col>\n          )}\n        </Row>\n      </div>\n    )\n  }\n\n  handleRefresh = p => {\n    console.log('refresh', p)\n  }\n\n  render = () => (\n    <>\n      <h3>Device parameters</h3>\n      <Search\n        placeholder=\"Search...\"\n        style={{ margin: '5px 0' }}\n        onChange={this.handleSearch}\n      />\n      <div\n        style={{\n          height: '500px',\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          padding: 0,\n        }}\n      >\n        {this.state.tree && (\n          <Tree\n            blockNode\n            switcherIcon={<Icon type=\"down\" />}\n            defaultExpandedKeys={['InternetGatewayDevice', 'Device']}\n          >\n            {this.state.tree}\n          </Tree>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Params\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AACA;AATA;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAjBA;AAmBA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAjCA;AAmCA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAzDA;AA2DA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAKA;AAAA;AAMA;AAAA;AAUA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAQA;AAAA;AAQA;AACA;AAxIA;AA0IA;AACA;AACA;AA5IA;AA6IA;AAIA;AACA;AAAA;AAAA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AADA;AAUA;AACA;AAAA;AAAA;AACA;AAHA;AAjBA;AACA;AA5IA;AACA;AACA;AADA;AAHA;AAMA;AACA;;AARA;AACA;AA2KA;;;;A","sourceRoot":""}